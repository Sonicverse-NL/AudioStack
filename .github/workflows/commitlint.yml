name: Validate Commit Messages

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate commit messages
        run: npx commitlint --from=${{ github.event.pull_request.base.sha }} --to=${{ github.event.pull_request.head.sha }} --verbose

      - name: Comment PR on validation failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ‚ùå Commit Message Validation Failed
              
              Your commit messages don't follow the [Conventional Commits](https://www.conventionalcommits.org/) specification.
              
              ### Required Format:
              \`\`\`
              <type>[optional scope]: <description>
              
              [optional body]
              
              [optional footer(s)]
              \`\`\`
              
              ### Valid Types:
              - **feat**: A new feature
              - **fix**: A bug fix
              - **docs**: Documentation only changes
              - **style**: Changes that do not affect the meaning of the code
              - **refactor**: A code change that neither fixes a bug nor adds a feature
              - **perf**: A code change that improves performance
              - **test**: Adding missing tests or correcting existing tests
              - **build**: Changes that affect the build system or external dependencies
              - **ci**: Changes to CI configuration files and scripts
              - **chore**: Other changes that don't modify src or test files
              - **revert**: Reverts a previous commit
              
              ### Examples:
              - \`feat(auth): add OAuth2 login support\`
              - \`fix: resolve memory leak in audio processing\`
              - \`docs: update installation instructions\`
              - \`ci: add automated docker builds\`
              
              Please update your commit messages and force-push to this branch.`
            })
